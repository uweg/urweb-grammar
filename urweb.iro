name               = urweb
file_extensions [] = ur;
background_color = white
color = black
styles [] {
   .comment : style {
      color = grey
      italic = true
      ace_scope = comment
      textmate_scope = comment
      pygments_scope = Comment
   }

   .punctuation : style {
      color     = red_2
      ace_scope             = punctuation
      textmate_scope        = punctuation
      pygments_scope        = Punctuation
   }
   
   .keyword : style {
      color     = blue
      ace_scope             = keyword
      textmate_scope        = keyword
      pygments_scope        = Keyword
   }
   
   .markup : style {
      color = green
      textmate_scope = markup
   }
   
   .string : style {
      color = red
      textmate_scope = string
   }
   
   .illegal : style {
      color                 = white
      background_color      = red
      ace_scope             = invalid
      textmate_scope        = invalid
      pygments_scope        = Generic.Error
   }
}
contexts[] {
   main : context {
      : pattern {
         regex          \= ((^|\s)(con|fun|and|let|in|end|val)($|\s))
         styles []       = .keyword;
      }
   
      : include "multi_line_comment" ;
   
      : inline_push {
         regex          \= (\()
         styles []       = .punctuation;
         : pop {  
            regex       \= (\))
            styles []    = .punctuation;
         }
         : include "main" ;
      }
   
      : inline_push {
         regex          \= (\[)
         styles []       = .punctuation;
         : pop {  
            regex       \= (\])
            styles []    = .punctuation;
         }
         : include "main" ;
      }
   
      : inline_push {
         regex          \= (\{)
         styles []       = .punctuation;
         : pop {  
            regex       \= (\})
            styles []    = .punctuation;
         }
         : include "main" ;
      }
   
      : inline_push {
         regex          \= (\")
         styles []       = .punctuation;
         default_style = .string
         : pop {  
            regex       \= (\")
            styles []    = .punctuation;
         }
      }
      
      : inline_push {
         regex \= (<[a-z]+)
         styles [] = .markup;
         : pop {
            regex \= (/?>)
            styles [] = .markup;
         }
         : include "main";
      }
      
      : pattern {
         regex \= (</[a-z]+>)
         styles [] = .markup;
      }
   }
   
   multi_line_comment : context {
   description        = multiline
   : inline_push {
      regex          \= (\(\*)
      styles []       = .comment;
      default_style   = .comment
      : pop {
         regex       \= (\*\))
         styles []    = .comment;
      }
   }
}
}